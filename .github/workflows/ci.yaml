name : CI pipeline

on : push

jobs :
  project-ci-test :
    runs-on: ubuntu-latest
    steps :
      - name : Checkout repository
        uses : actions/checkout@v2
        
      - name : Set up Python
        uses : actions/setup-python@v2
        with :
          python-version : '3.11'
          
      - name : Cache pip dependencies
        uses : actions/cache@v3
        with :
          path : ~/.cache/pip
          key : ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys : |
            ${{ runner.os }}-pip-
            
      - name : Install dependencies
        run : |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name : Configure DVC Google Drive credentials
        env :
          GDRIVE_CLIENT_ID : ${{ secrets.GDRIVE_CLIENT_ID }}
          GDRIVE_CLIENT_SECRET : ${{ secrets.GDRIVE_CLIENT_SECRET }}
        run : |
          mkdir -p .dvc
          cat > .dvc/config.local << EOF
          ['remote "myremote"']
              gdrive_client_id = ${GDRIVE_CLIENT_ID}
              gdrive_client_secret = ${GDRIVE_CLIENT_SECRET}
          EOF
          echo "âœ“ DVC Google Drive credentials configured"
          
      - name : Pull data from DVC Google Drive
        continue-on-error: false
        run : |
          echo "Pulling data from Google Drive..."
          dvc pull -v
          echo "âœ“ Data successfully pulled from Google Drive"
          
      - name : Run pipeline
        env :
          DAGSHUB_PAT : ${{ secrets.IOT_DAGSHUB_KEY }}
        run : |
          dvc repro
          
      - name : Run model tests
        id: tests
        env :
          DAGSHUB_PAT : ${{ secrets.IOT_DAGSHUB_KEY  }}
        run : |
          echo "Running model performance tests..."
          if python -m unittest tests/test_model.py; then
            echo "âœ“ Tests passed - new model is better than production model"
            echo "test_result=passed" >> $GITHUB_OUTPUT
          else
            echo "âœ— Tests failed - production model is still better"
            echo "â„¹ Skipping model promotion - keeping current production model"
            echo "test_result=failed" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
        
      - name : Promote model to production
        if : steps.tests.outputs.test_result == 'passed'
        env :
          DAGSHUB_PAT : ${{ secrets.IOT_DAGSHUB_KEY  }}
        run : |
          echo "ðŸš€ Promoting model to Production..."
          python scripts/promote_model.py
          echo "âœ“ Model successfully promoted to Production!"
          
      - name : Skip promotion message
        if : steps.tests.outputs.test_result == 'failed'
        run : |
          echo "â„¹ Model promotion skipped"
          echo "The current production model performs better than the new staging model."
          echo "No changes were made to the production environment."

      - name : Run Flask app tests
        if : success()
        env :
          DAGSHUB_PAT : ${{ secrets.IOT_DAGSHUB_KEY  }}
        run : |
          python -m unittest tests/test_flask_app.py